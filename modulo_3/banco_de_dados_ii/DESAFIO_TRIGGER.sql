CREATE TABLE CLIENTE (
COD_CLI SERIAL NOT NULL PRIMARY KEY,
NOME VARCHAR(40) NOT NULL
);

CREATE TABLE VENDA (
COD_VENDA SERIAL NOT NULL PRIMARY KEY,
VALOR_TOTAL FLOAT NOT NULL,
DT_VENDA DATE NOT NULL,
COD_CLI INT NOT NULL REFERENCES CLIENTE(COD_CLI)
);

CREATE TABLE PRODUTO (
COD_PROD SERIAL NOT NULL PRIMARY KEY,
NOME VARCHAR(40) NOT NULL,
VALOR FLOAT NOT NULL,
QUANT INT NOT NULL
);

CREATE TABLE COMBO (
COD_PROD_COMBO INT NOT NULL REFERENCES PRODUTO(COD_PROD),
COD_PROD_COMP INT NOT NULL REFERENCES PRODUTO(COD_PROD),
QUANT INT NOT NULL
);

CREATE TABLE ITEM_VENDA(
COD_PROD INT NOT NULL REFERENCES PRODUTO(COD_PROD),
COD_VENDA INT NOT NULL REFERENCES VENDA(COD_VENDA),
QUANT_VENDIDA INT NOT NULL
);

CREATE OR REPLACE FUNCTION ATUALIZAR_ESTOQUE() 
RETURNS TRIGGER
AS $$
BEGIN
	IF NEW.QUANT_VENDIDA <= (SELECT QUANT FROM PRODUTO WHERE COD_PROD = NEW.COD_PROD) THEN
		UPDATE PRODUTO
		SET QUANT = QUANT - NEW.QUANT_VENDIDA
		WHERE COD_PROD = NEW.COD_PROD;
		RAISE NOTICE 'VENDA REALIZADA COM SUCESSO';

		UPDATE VENDA
		SET VALOR_TOTAL = VALOR_TOTAL + (NEW.QUANT_VENDIDA * (SELECT VALOR FROM PRODUTO WHERE COD_PROD = NEW.COD_PROD))
		WHERE COD_VENDA = NEW.COD_VENDA;
	ELSE
		RAISE EXCEPTION 'ESTOQUE INSULFICIENTE! NÃO FOI POSSÍVEL REALIZAR A VENDA';
	END IF;	

	RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER PROCESSAR_VENDA
BEFORE INSERT OR UPDATE
ON ITEM_VENDA
FOR EACH ROW
EXECUTE PROCEDURE ATUALIZAR_ESTOQUE();

INSERT INTO CLIENTE VALUES (DEFAULT, 'LUCAS');
INSERT INTO PRODUTO VALUES (DEFAULT, 'COXINHA', 5, 10);
INSERT INTO PRODUTO VALUES (DEFAULT, 'REFRIGERANTE', 5, 10);
INSERT INTO PRODUTO VALUES (DEFAULT, 'COMBO CASAL', 7, 0);
INSERT INTO COMBO VALUES (3, 1, 2);
INSERT INTO COMBO VALUES (3, 2, 2);
INSERT INTO VENDA VALUES (DEFAULT, 0, NOW(), 1);
INSERT INTO ITEM_VENDA VALUES (1, 1, 11);
INSERT INTO ITEM_VENDA VALUES (2, 1, 11);
INSERT INTO ITEM_VENDA VALUES (1, 1, 2);
INSERT INTO ITEM_VENDA VALUES (2, 1, 1);

SELECT * FROM CLIENTE;
SELECT * FROM PRODUTO;
SELECT * FROM COMBO;
SELECT * FROM VENDA;
SELECT * FROM ITEM_VENDA;

DROP TABLE CLIENTE, PRODUTO, COMBO, VENDA, ITEM_VENDA;