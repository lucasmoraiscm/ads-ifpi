-- SOBRECARGA
-- CREATE OR REPLACE FUNCTION TESTA1(I INT, X INT)

CREATE OR REPLACE FUNCTION TESTA1(I INT)
RETURNS INT
AS $$
BEGIN
RETURN I*I;
END;
$$ LANGUAGE PLPGSQL;

SELECT TESTA1(8);

CREATE OR REPLACE FUNCTION TESTA2(INT, INT)
RETURNS INT 
AS $$
BEGIN
RETURN $1*$2;
END;
$$ LANGUAGE PLPGSQL;

SELECT TESTA2(8, 8);



CREATE TABLE CLIENTE(
COD_CLI INT NOT NULL PRIMARY KEY,
NOME VARCHAR(40) NOT NULL
);

CREATE TABLE PRODUTO(
COD_PROD INT NOT NULL PRIMARY KEY,
VALOR FLOAT NOT NULL,
QUANT_EST INT NOT NULL,
NOME VARCHAR(40) NOT NULL
);

CREATE TABLE PEDIDO(
COD_PED INT NOT NULL PRIMARY KEY,
COD_CLI INT NOT NULL REFERENCES CLIENTE(COD_CLI),
DT_PEDIDO TIMESTAMP NOT NULL,
VALOR_TOTAL FLOAT NOT NULL
);

CREATE TABLE ITEM_PEDIDO(
COD_PROD INT NOT NULL REFERENCES PRODUTO(COD_PROD),
COD_PED INT NOT NULL REFERENCES PEDIDO(COD_PED),
QUANT INT NOT NULL
);


INSERT INTO CLIENTE (COD_CLI, NOME) VALUES
(1, 'Ana Silva'),
(2, 'Bruno Souza'),
(3, 'Carla Dias'),
(4, 'Daniel Rocha'),
(5, 'Eduarda Melo'),
(6, 'Felipe Lima'),
(7, 'Gabriela Nunes'),
(8, 'Henrique Alves'),
(9, 'Isabela Costa'),
(10, 'João Martins');

INSERT INTO PRODUTO (COD_PROD, VALOR, QUANT_EST, NOME) VALUES
(1, 10.50, 100, 'Caneta'),
(2, 5.75, 200, 'Lápis'),
(3, 15.00, 150, 'Caderno'),
(4, 3.25, 500, 'Borracha'),
(5, 12.00, 80, 'Estojo'),
(6, 25.50, 60, 'Mochila'),
(7, 7.80, 300, 'Régua'),
(8, 9.90, 250, 'Apontador'),
(9, 2.50, 1000, 'Clips'),
(10, 18.00, 90, 'Livro');


CREATE OR REPLACE FUNCTION TESTAA3(CD INT, NM VARCHAR(30))
RETURNS VOID
AS $$
BEGIN
UPDATE FORNECEDOR SET NOME_FORNECEDOR = NM
WHERE COD_FORNECEDOR = NM;
RAISE NOTICE 'ALTERAÇÃO REALIZADA COM SUCESSO';
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION FAZ_INSERCAO(NM VARCHAR(50))
RETURNS VOID
AS $$
DECLARE
	V INT
BEGIN
	IF NOT EXISTS (SELECT * FROM CLIENTE) THEN
		INSERT INTO CLIENTE VALUES (1, NM);
	ELSE
		SELECT MAX(COD_CLI) INTO V FROM CLIENTE;
		INSERT INTO CLIENTE VALUES (V+1, NM);
	END IF;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION GET1()
RETURNS SETOF FORNECEDOR
AS $$
BEGIN
RETURN QUERY SELECT * FROM FORNECEDOR;
END;
$$ LANGUAGE PLPGSQL;

SELECT * FROM GET1();

CREATE OR REPLACE FUNCTION GET3(I VARCHAR)
RETURNS SETOF RECORD
AS $$
BEGIN
RETURN QUERY EXECUTE FORMAT('SELECT * FROM %I', I);
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION GET33()
RETURNS TABLE (COD)



-- ATIVIDADE
CREATE OR REPLACE FUNCTION REALIZAR_PEDIDO(COD_PEDIDO INT, NOME_PROD VARCHAR(30), NOME_CLI VARCHAR(40), QUANT_VEND INT)
RETURNS VOID
AS $$
DECLARE
	COD_PRODUTO INT
	COD_CLIENTE INT
BEGIN
	IF NOME_PROD EXISTS (SELECT NOME FROM PRODUTO) THEN
		COD_PRODUTO := (SELECT COD_PROD FROM PRODUTO WHERE NOME ILIKE NOME_PROD);
	ELSE
		RAISE EXCEPTION 'O NOME DO PRODUTO NÃO EXISTE'
	END IF;

	IF NOME_CLI EXISTS (SELECT NOME FROM CLIENTE) THEN
		COD_CLIENTE := (SELECT COD_CLI FROM CLIENTE WHERE NOME ILIKE NOME_CLI);
	ELSE
		RAISE EXCEPTION 'O NOME DO CLIENTE NÃO EXISTE'
	END IF;

	IF COD_PEDIDO NOT EXISTS (SELECT COD_PED FROM PEDIDO) THEN
		INSERT INTO PEDIDO VALUES (COD_PEDIDO, COD_CLIENTE, NOW(), 0);
	END IF;

	INSERT INTO ITEM_PEDIDO VALUES (COD_PRODUTO, COD_PEDIDO, QUANTIDADE);
END;
$$ LANGUAGE PLPGSQL;


CREATE OR REPLACE FUNCTION VENDA(COD_PED INT, NOME_PROD VARCHAR, NOME_CLI VARCHAR, QUANT INT)
RETURNS VOID
AS $$
DECLARE
	COD_CL INT;
	COD_PR INT;
	VALOR_UNI FLOAT;
BEGIN
	SELECT COD_CLI INTO COD_CL FROM CLIENTE WHERE NOME = NOME_CLI;
	SELECT COD_PROD INTO COD_PR FROM PRODUTO WHERE NOME = NOME_PROD;
	SELECT VALOR INTO VALOR_UNI FROM PRODUTO WHERE NOME = NOME_PROD;

	INSERT INTO PEDIDO VALUES (COD_PED, COD_CL, CURRENT_DATE, (QUANT_VEND * VALOR_UNI));
	INSERT INTO ITEM_PEDIDO VALUES (COD_PED, COD_PR, QUANT_VEND);
	
	UPDATE PRODUTO SET QUANT_EST = QUANT_EST - QUANT_VEND
	WHERE COD_PROD = COD_PR;
END;
$$ LANGUAGE PLPGSQL;

